{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_Bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","href","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","github","_public_static_d_2452627939_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"0NAWMA,oGACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUb,KAAKC,MAAMY,SAAUR,MAAOH,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACET,MAAM,YACNU,SAAU,yCAEZN,EAAAC,EAAAC,cAACK,EAAA,EAAD,MACCV,EAAMW,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNd,EAAQc,EAAKC,YAAYf,OAASc,EAAKE,OAAOC,KACpD,OACEb,EAAAC,EAAAC,cAAA,OAAKY,IAAKJ,EAAKE,OAAOC,MACpBb,EAAAC,EAAAC,cAAA,MACEa,MAAO,CACLC,aAAcC,YAAO,OAGvBjB,EAAAC,EAAAC,cAACgB,EAAA,KAAD,CAAMH,MAAO,CAAEI,UAAS,QAAYC,GAAIV,EAAKE,OAAOC,MACjDjB,IAGLI,EAAAC,EAAAC,cAAA,aAAQQ,EAAKC,YAAYU,MACzBrB,EAAAC,EAAAC,cAAA,KAAGoB,wBAAyB,CAAEC,OAAQb,EAAKc,mBA3BjCC,IAAMC,YAoCftC,YAER,IAAMuC,EAAS,+CCjDtBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAxC,IAAA2B,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAA1C,IAAA,IAAA2C,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBR,IAAMoB,cAAc,IAEzCX,EAAc,SAAA1C,GAAK,OACvB4C,EAAAnC,EAAAC,cAAC+B,EAAmBa,SAApB,KACG,SAAAC,GACC,OACEvD,EAAMF,MACLyD,EAAgBvD,EAAMwD,QAAUD,EAAgBvD,EAAMwD,OAAO1D,MAEtDE,EAAMH,QAAUG,EAAMyD,UAC5BzD,EAAMF,KAAOE,EAAMF,KAAKA,KAAOyD,EAAgBvD,EAAMwD,OAAO1D,MAGvD8C,EAAAnC,EAAAC,cAAA,uCAaf,SAAS8B,IACP,MAAM,IAAIkB,MACR,gVATJhB,EAAYiB,UAAY,CACtB7D,KAAM8D,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBlE,OAAQ+D,IAAUI,KAClBP,SAAUG,IAAUI,wCCnCtB5B,EAAAG,EAAAD,EAAA,sBAAAb,IAAAW,EAAAG,EAAAD,EAAA,sBAAA2B,IAAA,IAAAC,EAAA9B,EAAA,KAAA+B,EAAA/B,EAAAS,EAAAqB,GAAAE,EAAAhC,EAAA,KAAAiC,EAAAjC,EAAAS,EAAAuB,GAGAE,IAAcC,oBAAsB,WAClC,MAAO,CACLC,2BAA4B,CAC1B7C,UAAS,iBAKR2C,IAAcG,YAErB,IAAMC,EAAa,IAAIC,IAAWL,KAOnBI,IACFjD,EAASiD,EAAWjD,OACpBwC,EAAQS,EAAWT,2BCtBhC,IAAsBW,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAhE,GAAkB,IAAfL,EAAeK,EAAfL,SACpBsE,EAAgBC,UAAOC,4BAA4BxE,EAASyE,UAClE,OAAOpD,IAAMvB,cAAc4E,IAApBC,OAAAC,OAAA,CACL5E,WACAsE,iBACGA,EAAcO,QAIrBR,EAAiBtB,UAAY,CAC3B/C,SAAUgD,IAAU8B,MAAM,CACxBL,SAAUzB,IAAUE,OAAOC,aAC1BA,YAGUkB,0GChBTU,4FACJ9F,OAAA,WAAS,IAGH+F,EAHGC,EAC+B9F,KAAKC,MAAnCY,EADDiF,EACCjF,SAAUR,EADXyF,EACWzF,MAAOqD,EADlBoC,EACkBpC,SA+CzB,OA1CEmC,EAJY,MAGVhF,EAASyE,SAETS,EAAArF,EAAAC,cAAA,MACEa,MAAKgE,OAAAC,OAAA,GACAvB,YAAM,KADN,CAEHzC,aAAcC,YAAO,KACrBsE,UAAW,KAGbD,EAAArF,EAAAC,cAACsF,EAAA,KAAD,CACEzE,MAAO,CACLI,UAAS,OACTsE,eAAc,OACdC,MAAK,WAEPtE,GAAE,KAEDxB,IAML0F,EAAArF,EAAAC,cAAA,MACEa,MAAO,CACL4E,WAAU,yBACVJ,UAAW,EACXvE,aAAcC,YAAO,KAGvBqE,EAAArF,EAAAC,cAACsF,EAAA,KAAD,CACEzE,MAAO,CACLI,UAAS,OACTsE,eAAc,OACdC,MAAK,WAEPtE,GAAE,KAEDxB,IAMP0F,EAAArF,EAAAC,cAAA,OACEa,MAAO,CACL6E,WAAU,OACVC,YAAW,OACXC,SAAU7E,YAAO,IACjB8E,QAAY9E,YAAO,KAAZ,IAAoBA,YAAO,OAGnCmE,EACAnC,EACDqC,EAAArF,EAAAC,cAAA,oCACqBoF,EAAArF,EAAAC,cAAA,KAAG8F,KAAK,4BAAR,gBA7DRvE,IAAMC,WAoEZyD,gHCpEf,SAASc,EAATxF,GAA2D,IAA5CyF,EAA4CzF,EAA5CyF,YAAaC,EAA+B1F,EAA/B0F,KAAMC,EAAyB3F,EAAzB2F,KAAM9F,EAAmBG,EAAnBH,SAAUV,EAASa,EAATb,MAChD,OACEI,EAAAC,EAAAC,cAACmG,EAAA,YAAD,CACErD,MAAOsD,EACPjH,OAAQ,SAAAC,GACN,IAAMiH,EACJL,GAAe5G,EAAKI,KAAKC,aAAauG,YACxC,OACElG,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,CACEwG,eAAgB,CACdN,QAEFvG,MAAOA,EACP8G,cAAa,QAAUpH,EAAKI,KAAKC,aAAaC,MAC9CwG,KAAM,CACJ,CACEO,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAShH,GAEX,CACEiH,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAStH,EAAKI,KAAKC,aAAamH,QAElC,CACEH,KAAI,gBACJC,QAAShH,GAEX,CACE+G,KAAI,sBACJC,QAASL,IAGVQ,OACCzG,EAAS0G,OAAS,EACd,CACEL,KAAI,WACJC,QAAStG,EAAS2G,KAAT,OAEX,IAELF,OAAOX,MAtDlB9G,KAAA4H,IA8DJjB,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACN9F,SAAU,IAGZ2F,EAAI9C,UAAY,CACd+C,YAAa9C,IAAUE,OACvB6C,KAAM/C,IAAUE,OAChB8C,KAAMhD,IAAUgE,MAChB9G,SAAU8C,IAAUiE,QAAQjE,IAAUE,QACtC1D,MAAOwD,IAAUE,OAAOC,YAGX0C,MAEf,IAAMK,EAAY,6OCzClB,IAAMgB,EAAQ,aAoBCC,IA1Df,WACE,OACEjC,EAAArF,EAAAC,cAACsF,EAAA,YAAD,CACExC,MAAOsE,EACPjI,OAAQ,SAAAC,GAAQ,IAAAkI,EACalI,EAAKI,KAAKC,aAA7BmH,EADMU,EACNV,OAAQW,EADFD,EACEC,OAChB,OACEnC,EAAArF,EAAAC,cAAA,OACEa,MAAO,CACL2G,QAAO,OACP1G,aAAcC,YAAO,OAGvBqE,EAAArF,EAAAC,cAACyH,EAAA1H,EAAD,CACE2H,MAAOtI,EAAKuI,OAAOC,gBAAgBF,MACnCG,IAAKjB,EACL/F,MAAO,CACL8E,YAAa5E,YAAO,IACpBD,aAAc,EACdgH,SAAU,GACVC,aAAY,UAGhB3C,EAAArF,EAAAC,cAAA,2BAEEoF,EAAArF,EAAAC,cAAA,WAFF,IAIEoF,EAAArF,EAAAC,cAAA,KAAG8F,KAAI,0BAA4ByB,EAAOS,QAA1C,eAzBV5I,KAAA6I","file":"component---src-pages-index-js-fd3ca2ffc27426b3467a.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\n// Ant Design CSS\nimport 'antd/dist/antd.min.css';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            marginBottom: rhythm(1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {children}\n        <footer>\n          © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n            />\n            <p>\n              人生没有白走的路，每一步都算数\n              <br/>\n              {` `}\n              <a href={`https://www.github.com/${social.github}`}>\n                我的github\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js"],"names":["Gitalk","window","require","undefined","gitalk","clientID","clientSecret","repo","owner","admin","distractionFreeMode","BlogPostTemplate","props","_this","_React$Component","call","this","data","componentDidMount","post","markdownRemark","createdDate","frontmatter","date","title","id","finalTitle","dayjs","isAfter","isBefore","md5","pathname","getPath","lastSymbol","length","url","Object","assign","render","siteTitle","site","siteMetadata","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","location","_components_seo__WEBPACK_IMPORTED_MODULE_9__","description","excerpt","style","scale","display","marginBottom","rhythm","marginTop","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_7__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","className","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape","Layout","header","_this$props","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","href","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","github","_public_static_d_2452627939_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-bf58f249565c42f8bc06.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport 'gitalk/dist/gitalk.css';\nimport dayjs from 'dayjs';\nimport md5 from 'md5';\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\n// Prevent webpack window problem\nconst isBrowser = typeof window !== 'undefined';\nconst Gitalk = isBrowser ? require('gitalk') : undefined;\nconst gitalk = {\n  clientID: '0c0154dd7c8dad82151d',\n  clientSecret: '5e67b21b04e68147903b49032581cbb7fa4a7624',\n  repo: 'mcgtts.github.io',\n  owner: 'mcgtts',\n  admin: 'mcgtts',\n  distractionFreeMode: true,\n}\n\n\nclass BlogPostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = this.props.data;\n  }\n\n  componentDidMount() {\n    // Gitalk\n    // Due to Github Issue tags length is limited,\n    // Then we need to hack the id\n\n    // 一開始的時候是直接調用 document.title 作為 id\n    // 不過在 2018年 3月 1日 Github 有標籤字數限制\n    // 2018年 9月 9日後直接使用 id\n\n    const post = this.data.markdownRemark\n    const issueDate = '2018-03-01';\n    const idDate = '2018-09-09'; // 修理遺留代碼錯誤\n    const createdDate = post.frontmatter.date;\n    const title = post.frontmatter.title;\n    let { id } = post.id;\n\n    let finalTitle = title;\n    if (dayjs(createdDate).isAfter(issueDate)) {\n      finalTitle = `${title} | Calpa's Blog`; // For Create Github Issue\n\n      if (dayjs(createdDate).isBefore(idDate)) {\n        id = md5(title);\n      }\n    } else {\n      const pathname = getPath();\n      const lastSymbol = pathname[pathname.length - 1] === '/' ? '' : '/';\n      id = `${url}${pathname}${lastSymbol}`;\n    }\n\n    const GitTalkInstance = new Gitalk({\n      ...gitalk,\n      title: finalTitle,\n      id,\n    });\n    GitTalkInstance.render('gitalk-container');\n  }\n\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n        <div id=\"gitalk-container\" className=\"col-sm-8 col-12 order-12\" />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n\n  \n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\nrequire(\"prismjs/plugins/line-numbers/prism-line-numbers.css\")\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n            marginBottom: rhythm(1),\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(28),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {children}\n        <footer>\n          © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(1.0),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n            />\n            <p>\n              人生没有白走的路，每一步都算数\n              <br/>\n              {` `}\n              <a href={`https://www.github.com/${social.github}`}>\n                我的github\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}